import numpy as np
import sys
import os
import subprocess
import time

config_0_10 = [6.14, 3.95, 1.13, 2.63, 1.87, -5.1, -1.93, -6.77, 1.9, -0.42,
              3.29, 0.54, 1.01, 6.61, 0.34, -2.55, 0.16, 3.76, -5.98, -0.25,
              7.12, -2.1, -2.25, -2.77, 1.6, 0.62, -4.14, -7.27, 2.6, -2.28,
              -0.24, 0.66, 3.96, -4.6, 6.17, -3.99, 0.4, 5.62, -0.91, 0.03,
              -3.18, -4.96, -3.47, 3.0, 1.85, 2.81, -7.47, 2.87, 2.59, 2.54,
              0.43, -0.11, 1.79, -5.29, -0.23, 3.75, -2.17, 0.89, -0.99, 0.12,
              3.48, -2.38, 0.37, 2.6, 0.34, -1.26, -0.99, 1.96, -0.03, 3.15,
              -2.18, 0.5, 0.9, 3.36, 1.05, -1.82, -4.64, -5.92, -1.6, 4.38,
              -1.73, 1.38, -1.51, 2.13, -6.72, 0.29, -2.09, 0.68, 0.69, 6.32,
              -2.44, 2.61, 1.64, 1.87, 2.39, -0.72, -1.42, 2.26, 0.74, -1.3]


config_0_5 = [-0.6, -2.38, -2.71, -0.89,  -1.81, 0.32, 0.9, -0.45, 0.41, -2.02,
              -0.56, 0.36, 2.97, 0.29, -2.25, -0.43, 0.25, 1.14, 0.03, 3.88,
              0.86, 0.3, -0.21, 1.65, 1.47, 1.97, -0.24, 1.83, 0.01, -1.67,
              -2.37, -2.53, -2.9, 1.1, 0.15, -1.15, 0.52, 1.51, 0.79, 0.09,
              0.91, -0.1, -1.11, 1.14, 0.56, -2.62, -0.98, 0.33, 0.82, -2.78,
              1.32, 0.7, 1.15, 2.47, 0.5, 1.69, -0.81, -1.48, -3.64, -2.45,
              -1.5, 0.99, 1.45, 1.88, 0.75, -0.36, -1.07, 1.1, -0.67, -4.22,
              -0.49, -0.48, -1.19, 0.71, -0.26, 0.7, 2.9, 2.22, -0.72, -2.68,
              -2.32, -3.17, -2.42, -2.42, 0.68, -0.03, 0.33, -1.31, -1.61, 1.91,
              -0.63, -0.18, 0.04, -0.56, 0.35, 0.06, -0.82, 1.33, 0.21, -0.41]


config_0_3 = [0.17, -0.12, 0.85, -0.45, -1.49, -1.96, 0.42, 2.04, -1.74, -0.02,
              -0.31, -1.22, -0.6, -1.68, -0.74, -1.81, 0.34, -0.48, 0.83, 0.57,
              -0.92, -0.41, -0.52, -1.49, -1.2, 0.11, 0.81, 0.59, -0.33, 1.46,
              -1.18, -2.15, -1.52, 2.38, -0.63, 0.56, -0.98, -0.26, 0.88, 0.49,
              1.26, 0.76, -0.33, 0.39, -1.25, -0.46, 0.65, 0.62, 1.93, -0.51,
              -2.01, -0.11, 0.51, 2.04, 1.75, 2.04, 0.39, -1.07, 0.48, -0.95,
              -0.57, 0.77, 0.05, 1.69, 0.33, -2.82, 0.83, 0.18, 0.1, -0.93,
              0.21, -0.64, 0.38, 0.35, -0.6, -1.23, -0.69, -2.14, -1.15, -2.33,
              0.13, 1.06, 0.67, -1.05, 0.71, -0.76, 1.79, -0.68, 1.38, 0.62,
              0.26, 0.02, 0.34, -0.42, -0.72, 0.68, -0.2, 0.28, 0.87, 0.52]

config_0_2 = [-0.33, 0.65, 0.37, -0.39, -1.07, -1.13, -0.26, -0.18, -0.19, 1.2,
              -0.32, -0.84, -0.71, 1.67, 0.41, 0.76, -0.85, -0.06, -0.65, 1.01,
              0.9, 0.42, 0.71, 0.98, -0.33, -0.31, 1.34, -0.21, -0.31, -0.25,
              -0.17, 0.34, 0.32, -0.73, -1.33, 0.46, 1.42, 0.04, -0.09, 1.21,
              0.69, -1.33, -0.25, 0.55, -0.01, -0.18, -0.17, -0.05, -0.12, 0.11,
              -0.37, -0.76, 0.74, -1.03, -0.3, 1.14, 0.66, -0.99, -0.98, -0.16,
              0.53, 0.34, -0.17, 0.98, 0.2, -0.3, -0.87, 0.62, 0.23, 0.37,
              0.11, -0.23, -0.92, 0.59, 1.09, 0.47, 1.11, -0.83, 0.25, 0.39,
              -0.62, -0.21, 0.6, 0.85, -0.41, -1.37, 0.15, -0.3, -0.5, 0.39,
              1.13, 0.56, 0.28, -0.24, 1.06, 1.91, 0.49, -0.42, 0.33, 0.62]

config_0_1 = [-0.13, -0.42, 0.39, 0.44, 0.38, 0.24, -0.39, -0.15, -0.25, -0.45,
              0.58, -0.26, -0.24, 0.1, 0.41, -0.17, -0.31, -0.37, 0.2, -0.1,
              0.18, 0.38, -0.18, 0.06, 0.13, -0.02, 0.03, -0.01, 0.4, 0.69,
              0.15, 0.12, 0.13, 0.03, 0.18, 0.05, 0.24, 0.21, 0.08, 0.03,
              -0.37, 0.33, -0.51, 0.0, -0.09, 0.12, -0.15, -0.17, 0.99, -0.18,
              0.03, 0.27, 0.21, 0.25, 0.09, 0.05, -0.24, -0.01, 0.06, -0.11,
              -0.24, 0.12, -0.3, -0.08, -0.32, 0.19, 0.33, -0.15, 0.29, -0.17,
              0.01, -0.27, -0.49, -0.02, -0.34, -0.21, 0.39, -0.14, -0.1, 0.1,
              0.43, -0.57, 0.77, 0.02, 0.46, -0.31, -0.2, 0.21, 0.19, 0.13,
              0.39, 0.1, 0.38, -0.17, -0.04, 0.33, 0.36, -0.39, -0.08, 0.19]

config_10_3 = [10.17, 9.88, 10.85, 9.55, 8.51, 8.04, 10.42, 12.04, 8.26, 9.98,
               9.69, 8.78, 9.4, 8.32, 9.26, 8.19, 10.34, 9.52, 10.83, 10.57,
               9.08, 9.59, 9.48, 8.51, 8.8, 10.11, 10.81, 10.59, 9.67, 11.46,
               8.82, 7.85, 8.48, 12.38, 9.37, 10.56, 9.02, 9.74, 10.88, 10.49,
               11.26, 10.76, 9.67, 10.39, 8.75, 9.54, 10.65, 10.62, 11.93, 9.49,
               7.99, 9.89, 10.51, 12.04, 11.75, 12.04, 10.39, 8.93, 10.48, 9.05,
               9.43, 10.77, 10.05, 11.69, 10.33, 7.18, 10.83, 10.18, 10.1, 9.07,
               10.21, 9.36, 10.38, 10.35, 9.4, 8.77, 9.31, 7.86, 8.85, 7.67,
               10.13, 11.06, 10.67, 8.95, 10.71, 9.24, 11.79, 9.32, 11.38, 10.62,
               10.26, 10.02, 10.34, 9.58, 9.28, 10.68, 9.8, 10.28, 10.87, 10.52]

config_10_2 = [9.67, 10.65, 10.37, 9.61, 8.93, 8.87, 9.74, 9.82, 9.81, 11.2,
               9.68, 9.16, 9.29, 11.67, 10.41, 10.76, 9.15, 9.94, 9.35, 11.01,
               10.9, 10.42, 10.71, 10.98, 9.67, 9.69, 11.34, 9.79, 9.69, 9.75,
               9.83, 10.34, 10.32, 9.27, 8.67, 10.46, 11.42, 10.04, 9.91, 11.21,
               10.69, 8.67, 9.75, 10.55, 9.99, 9.82, 9.83, 9.95, 9.88, 10.11,
               9.63, 9.24, 10.74, 8.97, 9.7, 11.14, 10.66, 9.01, 9.02, 9.84,
               10.53, 10.34, 9.83, 10.98, 10.2, 9.7, 9.13, 10.62, 10.23, 10.37,
               10.11, 9.77, 9.08, 10.59, 11.09, 10.47, 11.11, 9.17, 10.25, 10.39,
               9.38, 9.79, 10.6, 10.85, 9.59, 8.63, 10.15, 9.7, 9.5, 10.39,
               11.13, 10.56, 10.28, 9.76, 11.06, 11.91, 10.49, 9.58, 10.33, 10.62]

config_10_1 = [9.87, 9.58, 10.39, 10.44, 10.38, 10.24, 9.61, 9.85, 9.75, 9.55,
               10.58, 9.74, 9.76, 10.1, 10.41, 9.83, 9.69, 9.63, 10.2, 9.9,
               10.18, 10.38, 9.82, 10.06, 10.13, 9.98, 10.03, 9.99, 10.4, 10.69,
               10.15, 10.12, 10.13, 10.03, 10.18, 10.05, 10.24, 10.21, 10.08, 10.03,
               9.63, 10.33, 9.49, 10.0, 9.91, 10.12, 9.85, 9.83, 10.99, 9.82,
               10.03, 10.27, 10.21, 10.25, 10.09, 10.05, 9.76, 9.99, 10.06, 9.89,
               9.76, 10.12, 9.7, 9.92, 9.68, 10.19, 10.33, 9.85, 10.29, 9.83,
               10.01, 9.73, 9.51, 9.98, 9.66, 9.79, 10.39, 9.86, 9.9, 10.1,
               10.43, 9.43, 10.77, 10.02, 10.46, 9.69, 9.8, 10.21, 10.19, 10.13,
               10.39, 10.1, 10.38, 9.83, 9.96, 10.33, 10.36, 9.61, 9.92, 10.19]



def generate_normal(mean, std):
    L = np.random.normal(mean, std, 100)
    res = []
    for i in range (len(L)):
        res.append(round(L[i], 2))
    return res

def convert_normal():
    res = []
    for iterm in config_10_1:
        res.append(round(iterm - 10, 2))

    print res

def setup_net_del(delay, jitter, loss):
    print "deleting tc....."

    # delete all rules
    return_code = subprocess.call("sudo tc qdisc del dev ens3f0 root", shell=True)
    if return_code == 0:
        print "delete successfully."
    else:
        print "delete failed."



def setup_net_add(delay, jitter, loss):

    delay = int(delay)
    jitter = int(jitter)

    # add a base rule, and call change later
    # sudo tc qdisc $OPS dev ens3f0 root tbf rate 16500kbit limit 1000000 burst 100k

    return_code = subprocess.call("sudo tc qdisc add dev ens3f0 root handle 1: netem delay 10ms loss random "+str(loss)+"%", shell=True)
    if return_code != 0:
        print "add base rule failed."
        exit(1)

    return_code = subprocess.call("sudo tc qdisc add dev ens3f0 parent 1: handle 2: tbf rate 16500kbit limit 1000000 burst 100k", shell=True)
    if return_code != 0:
        print "step1 failed."
        exit(1)


    i = 0
    while True:

        norm_jitter = 0

        if jitter == 10:
            norm_jitter = config_0_10[i%100]
        elif jitter == 5:
            norm_jitter = config_0_5[i%100]
        elif jitter == 3:
            norm_jitter = config_0_3[i%100]
        elif jitter == 2:
            norm_jitter = config_0_2[i%100]
        elif jitter == 1:
            norm_jitter = config_0_1[i%100]
        elif jitter == 0:
            print "zero jitter"
        else:
            print "ERROR!!"

        return_code = subprocess.call("sudo tc qdisc change dev ens3f0 root handle 1: netem delay " +str(norm_jitter+delay)+"ms loss random "+str(loss)+"%", shell=True)
        if return_code != 0:
            print "change rule failed."
            exit(1)
        else:
            print "add delay "+str(norm_jitter+delay)+" loss rate "+str(loss)+"%"

        time.sleep(1)
        i += 1


if __name__ == "__main__":

    #convert_normal()

    #print generate_normal(10, 1)
    #print generate_normal(10, 0.666)
    #print generate_normal(10, 0.333)
    #print generate_normal(0, 1.666)
    #print generate_normal(0, 3.333)

    if len(sys.argv) < 4 :
        print "Too few arguments\n"
        print "Usage: python setup_net.py <delay(10|15|20)> <jitter(1|2|3|5)> <loss(1|0)> <add|del>\n"
        sys.exit(2)

    delay = sys.argv[1]
    jitter = sys.argv[2]
    loss = sys.argv[3]
    option = sys.argv[4]

    # if delay not in ["10", "15", "20"]:
    #     print "The jitter can only be 10, 15 or 20!"
    #     sys.exit(2)

    if jitter not in ["0", "1", "2", "3", "5", "10"]:
        print "The jitter can only be 0, 1, 2, 3, 5 or 10!"
        sys.exit(2)

    if loss not in ["0.1", "0", "0.05"]:
        print "The loss can only be 1, 0.05 or 0!"
        sys.exit(2)

    if option not in ["add", "del"]:
        print "The option can only be add or del!"
        sys.exit(2)

    if loss == "0":
        loss = "0.00000000000000000000001"

    if option == "del":
        setup_net_del(delay, jitter, loss)
    else:
        setup_net_add(delay, jitter, loss)
